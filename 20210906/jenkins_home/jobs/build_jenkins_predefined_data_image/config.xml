<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.41">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>JENKINS_BACKUP_REPOSITORY</name>
          <description></description>
          <defaultValue>https://github.com/bmastahac/jenkins-backup.git</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description></description>
          <defaultValue>20210712</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JENKINS_PREDEFINED_DATA_IMAGE_VERSION</name>
          <description></description>
          <defaultValue>1.1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REGISTRY</name>
          <description></description>
          <defaultValue>public.ecr.aws/n4q1q0z2</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JENKINS_PREDIFINED_DATA_IMAGE_NAME</name>
          <description></description>
          <defaultValue>pharmaledger-jenkins-predefined-data</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.92">
    <script>podTemplate(
    containers: [
        containerTemplate(name: &apos;docker&apos;, image: &apos;public.ecr.aws/n4q1q0z2/pharmaledger-docker-aws-jenkins-agent:1.0&apos;,alwaysPullImage:true , ttyEnabled: true, command: &apos;cat&apos;)
    ],
    volumes: [hostPathVolume(hostPath: &apos;/var/run/docker.sock&apos;, mountPath: &apos;/var/run/docker.sock&apos;)],
    envVars: [secretEnvVar(key: &apos;aws_key_id&apos;, secretName: &apos;aws-config&apos;, secretKey: &apos;aws_key_id&apos;),
              secretEnvVar(key: &apos;aws_access_key&apos;, secretName: &apos;aws-config&apos;, secretKey: &apos;aws_access_key&apos;)
             ]
  ){
            podTemplate(
          containers: [
              containerTemplate(name: &apos;node&apos;, image: &apos;node:latest&apos;, ttyEnabled: true, command: &apos;cat&apos;)
              ]
          ){
              node(POD_LABEL){
              
                  stage (&apos;Git clone&apos;){
                      sh &apos;git clone https://github.com/PharmaLedger-IMI/governance-workspace.git&apos;
                      sh &apos;cd governance-workspace/jenkins/docker/predefined &amp;&amp; sed &quot;s,%BACKUP_BRANCH_NAME%,${BRANCH},g&quot; Dockerfile.template | sed &quot;s,%JENKINS_BACKUP_REPOSITORY%,${JENKINS_BACKUP_REPOSITORY},g&quot; &gt; Dockerfile&apos;
                      sh &apos;cat governance-workspace/jenkins/docker/predefined/Dockerfile&apos;
                  }
                  
                  
                  stage (&apos;Build and publish docker Image&apos;){
                            container (&apos;docker&apos;){
                                sh &apos;aws --version&apos;
                                sh &apos;aws configure set aws_access_key_id &quot;$aws_key_id&quot;&apos;
                                sh &apos;aws configure set aws_secret_access_key &quot;$aws_access_key&quot;&apos;
                                sh &apos;aws configure set default.region &quot;eu-east-1&quot;&apos;
                                sh &apos;aws configure set default.output \&apos;NONE\&apos;&apos;
                                sh &apos;aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REGISTRY&apos;
                                sh &apos;cd governance-workspace/jenkins/docker/predefined &amp;&amp; docker build --no-cache --network host -t $REGISTRY/$JENKINS_PREDIFINED_DATA_IMAGE_NAME:$JENKINS_PREDEFINED_DATA_IMAGE_VERSION .&apos;
                                sh &apos;docker push $REGISTRY/$JENKINS_PREDIFINED_DATA_IMAGE_NAME:$JENKINS_PREDEFINED_DATA_IMAGE_VERSION&apos;
                            }
                        }
              
              }
              
          }
   
      
      
      
  }</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>