<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.41">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UpstreamCause>
            <upstreamProject>build_jenkins_predefined_data_image</upstreamProject>
            <upstreamUrl>job/build_jenkins_predefined_data_image/</upstreamUrl>
            <upstreamBuild>26</upstreamBuild>
            <upstreamCauses>
              <hudson.model.Cause_-UserIdCause>
                <userId>admin</userId>
              </hudson.model.Cause_-UserIdCause>
            </upstreamCauses>
          </hudson.model.Cause_-UpstreamCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.support.steps.build.BuildUpstreamNodeAction plugin="pipeline-build-step@2.13">
      <upstreamNodeId>17</upstreamNodeId>
      <upstreamRunId>build_jenkins_predefined_data_image#26</upstreamRunId>
    </org.jenkinsci.plugins.workflow.support.steps.build.BuildUpstreamNodeAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>DATA_IMAGE_NAME</name>
          <description></description>
          <value>pharmaledger-jenkins-predefined-data</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>DATA_IMAGE_VERSION</name>
          <description></description>
          <value>1.5</value>
        </hudson.model.StringParameterValue>
        <io.jenkins.plugins.file__parameters.Base64FileParameterValue plugin="file-parameters@99.102.vbc6a133bcbbb">
          <name>dockerfile</name>
          <description></description>
          <base64>RlJPTSBhbHBpbmUvZ2l0ClJVTiBta2RpciAvdmFyL2plbmtpbnMtYmFja3VwCgpFTlYgQkFDS1VQX0JSQU5DSF9OQU1FPSIyMDIxMDkxNCIKRU5WIEpFTktJTlNfQkFDS1VQX1JFUE9TSVRPUlkgPSAiaHR0cHM6Ly9naXRodWIuY29tL2JtYXN0YWhhYy9qZW5raW5zLWJhY2t1cC5naXQiClJVTiBnaXQgY2xvbmUgLS1zaW5nbGUtYnJhbmNoIC0tYnJhbmNoIDIwMjEwOTE0IGh0dHBzOi8vZ2l0aHViLmNvbS9ibWFzdGFoYWMvamVua2lucy1iYWNrdXAuZ2l0IC92YXIvamVua2lucy1iYWNrdXAgJiYgbHMgL3Zhci9qZW5raW5zLWJhY2t1cApSVU4gY2QgL3Zhci9qZW5raW5zLWJhY2t1cC8yMDIxMDkxNC9qZW5raW5zX2hvbWUgJiYgY3AgLWEgLiAuLi8uLi8KUlVOIGNkIC92YXIvamVua2lucy1iYWNrdXAgJiYgcm0gLXJmIDIwMjEwOTE0ICYmIHJtIC1yZiAuLy5naXQKQ01EIFsgInNoIiBdCgoKCg==</base64>
        </io.jenkins.plugins.file__parameters.Base64FileParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>DATA_IMAGE_NAME</string>
        <string>DATA_IMAGE_VERSION</string>
        <string>dockerfile</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.0.2.8">
      <queuingDurationMillis>7924</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>7923</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.19">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.92">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.0.2.8">
      <queuingDurationMillis>10736</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>10728</buildableDurationMillis>
      <waitingDurationMillis>1</waitingDurationMillis>
      <executingDurationMillis>108990</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>610</queueId>
  <timestamp>1631614988243</timestamp>
  <startTime>1631614988245</startTime>
  <result>SUCCESS</result>
  <duration>121020</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>//Jenkins env variable
//$POD_DOCKER_REPOSITORY
//$KUBECTL_JENKINS_AGENT_DOCKER_IMAGE_NAME
//$KUBECTL_JENKINS_AGENT_DOCKER_IMAGE_VERSION


//Pipeline parameters coded at Jenkins pipeline level
// dockerfile - base64 small file
// DATA_IMAGE_NAME - string
// DATA_IMAGE_VERSION - string

def docker_image_source = &quot;$POD_DOCKER_REPOSITORY&quot;+&apos;:&apos;+&quot;$KUBECTL_JENKINS_AGENT_DOCKER_IMAGE_NAME&quot;+&apos;_&apos;+&quot;$KUBECTL_JENKINS_AGENT_DOCKER_IMAGE_VERSION&quot;

podTemplate(
    containers: [
        containerTemplate(name: &apos;docker&apos;, image: docker_image_source, alwaysPullImage:true , ttyEnabled: true, command: &apos;cat&apos;)
    ],
    volumes: [hostPathVolume(hostPath: &apos;/var/run/docker.sock&apos;, mountPath: &apos;/var/run/docker.sock&apos;)],
    envVars: [secretEnvVar(key: &apos;aws_key_id&apos;, secretName: &apos;aws-config&apos;, secretKey: &apos;aws_key_id&apos;),
              secretEnvVar(key: &apos;aws_access_key&apos;, secretName: &apos;aws-config&apos;, secretKey: &apos;aws_access_key&apos;)
             ]
  ){
            podTemplate(
          containers: [
              containerTemplate(name: &apos;node&apos;, image: &apos;node:latest&apos;, ttyEnabled: true, command: &apos;cat&apos;)
              ]
          ){
              node(POD_LABEL){

                  stage (&apos;Build and publish docker Image&apos;){
                            container (&apos;docker&apos;){
                                sh &apos;aws --version&apos;
                                sh &apos;aws configure set aws_access_key_id &quot;$aws_key_id&quot;&apos;
                                sh &apos;aws configure set aws_secret_access_key &quot;$aws_access_key&quot;&apos;
                                sh &apos;aws configure set default.region &quot;eu-east-1&quot;&apos;
                                sh &apos;aws configure set default.output \&apos;NONE\&apos;&apos;
                                sh &apos;aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin $POD_DOCKER_REPOSITORY&apos;
                                    withFileParameter(&apos;dockerfile&apos;){
                                        sh &apos;cat $dockerfile &gt; Dockerfile&apos;
                                        sh &apos;docker build --no-cache --network host -t ${POD_DOCKER_REPOSITORY}:${DATA_IMAGE_NAME}_${DATA_IMAGE_VERSION} .&apos;
                                        sh &apos;docker push ${POD_DOCKER_REPOSITORY}:${DATA_IMAGE_NAME}_${DATA_IMAGE_VERSION}&apos;

                                    }



                            }
                        }

              }

          }




  }
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>345314963</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>875071010</long>
      </entry>
      <entry>
        <string>run</string>
        <long>5514382971</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>548828401</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>122181334</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>36</iota>
    <head>1:36</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>