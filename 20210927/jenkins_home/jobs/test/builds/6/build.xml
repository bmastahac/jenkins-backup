<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.41">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.0.2.8">
      <queuingDurationMillis>2</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.7.2">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.7.2">
              <sha1>8db8a7691d67c6d2cf2999688d234950dbff4112</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>6</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <scmName></scmName>
      <remoteUrls>
        <string>${repo}</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.13">
      <revisionStates>
        <entry>
          <string>git ${repo}</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.19">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.92">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.0.2.8">
      <queuingDurationMillis>12869</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>12853</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>6193</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>144</queueId>
  <timestamp>1632731219833</timestamp>
  <startTime>1632731219836</startTime>
  <result>SUCCESS</result>
  <duration>19890</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>//Jenkins env variable
//$POD_DOCKER_REPOSITORY
//$KUBECTL_JENKINS_AGENT
//$KUBECTL_JENKINS_AGENT_VERSION


def kubectl_image_source = &quot;$POD_DOCKER_REPOSITORY&quot;+&apos;:&apos;+&quot;$KUBECTL_JENKINS_AGENT&quot;+&apos;_&apos;+&quot;$KUBECTL_JENKINS_AGENT_VERSION&quot;

      podTemplate(
          containers: [
              containerTemplate(name: &apos;node&apos;, image: &apos;node:latest&apos;, ttyEnabled: true, command: &apos;cat&apos;)
              ]
          ){

            podTemplate(serviceAccount: &apos;jdefaultmns&apos;,namespace: &apos;jenkins&apos;,containers: [
                  containerTemplate(name: &apos;kubectl&apos;, image: kubectl_image_source, command: &apos;cat&apos;, ttyEnabled: true)
                ],
                volumes: [
                  hostPathVolume(mountPath: &apos;/var/run/docker.sock&apos;, hostPath: &apos;/var/run/docker.sock&apos;)
                ]){

                      node(POD_LABEL){


                        try{
                            stage (&apos;Clean&apos;){
                                container (&apos;kubectl&apos;){
                                    sh &apos;kubectl delete pod jenkins-backup -n jenkins&apos;
                                }
                            }
                        }
                        catch (err){

                        }


                        stage (&apos;Repository cloning&apos;){
                            container(&apos;node&apos;){
                                    sh &apos;git clone https://github.com/PharmaLedger-IMI/governance-workspace.git&apos;
                                    sh &apos;cd governance-workspace/jenkins/docker/backup &amp;&amp; sed &quot;s,%GITHUB_USER%,${GITHUB_USER},g&quot; jenkins-backup.yaml.template | sed &quot;s,%GITHUB_USER_EMAIL%,${GITHUB_USER_EMAIL},g&quot; | sed &quot;s,%GITHUB_ACCESS_TOKEN%,${GITHUB_ACCESS_TOKEN},g&quot; &gt; jenkins-backup.yaml&apos;
                                    sh &apos;cat governance-workspace/jenkins/docker/backup/jenkins-backup.yaml&apos;
                            }
                        }

                        stage (&apos;Deploy jenkins backup container&apos;){
                            container(&apos;kubectl&apos;){
                                sh &apos;cd governance-workspace/jenkins/docker/backup &amp;&amp; kubectl apply -f . -n jenkins&apos;
                                //sh &apos;sleep 5m&apos;
                            }
                        }


                        stage (&apos;Backup finished. Clean up&apos;){
                            container(&apos;kubectl&apos;){
                               // sh &apos;cd governance-workspace/jenkins/docker/backup &amp;&amp; kubectl delete -f . -n jenkins&apos;
                            }
                        }

                      }
                }
          }
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>223141408</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>337247301</long>
      </entry>
      <entry>
        <string>run</string>
        <long>2866914252</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>239952932</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>48209068</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>52</iota>
    <head>1:52</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.7.2">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>${repo}</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/test@script</workspace>
      <changelogFile>/var/jenkins_home/jobs/test/builds/6/changelog886055576731403087.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>