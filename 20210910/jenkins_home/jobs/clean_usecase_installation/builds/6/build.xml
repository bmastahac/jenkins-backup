<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.41">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>domain</name>
          <description></description>
          <value>epi</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>subdomain</name>
          <description></description>
          <value>nvs.epi</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>vaultdomain</name>
          <description></description>
          <value>nvs</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>domain</string>
        <string>subdomain</string>
        <string>vaultdomain</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>mab</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.0.2.8">
      <queuingDurationMillis>1</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.19">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.92">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.0.2.8">
      <queuingDurationMillis>15349</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>15347</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>6039</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>239</queueId>
  <timestamp>1625817714632</timestamp>
  <startTime>1625817714636</startTime>
  <result>UNSTABLE</result>
  <duration>22006</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>podTemplate(serviceAccount: &apos;jdefaultmns&apos;,namespace: &apos;jenkins&apos;,containers: [
      containerTemplate(name: &apos;kubectl&apos;, image: &apos;public.ecr.aws/n4q1q0z2/pharmaledger-kubectl-jenkins-agent:1.0&apos;, command: &apos;cat&apos;, ttyEnabled: true)
    ],
    volumes: [
      hostPathVolume(mountPath: &apos;/var/run/docker.sock&apos;, hostPath: &apos;/var/run/docker.sock&apos;)
    ]){
        node (POD_LABEL){

            stage (&apos;Cleanup usecase installation&apos;){
                container(&apos;kubectl&apos;){
                    try{
                        stage(&apos;Remove deployment&apos;){
                            sh &apos;kubectl delete deployments $subdomain -n default&apos;
                        }
                    }
                    catch (err) {
                        unstable (message: &quot;${STAGE_NAME} is unstable.&quot;)
                    }

                    try{
                        stage(&apos;Remove services&apos;){
                            sh &apos;kubectl delete services $domain -n default&apos;
                        }
                    }
                    catch (err) {
                        unstable (message: &quot;${STAGE_NAME} is unstable.&quot;)
                    }

                    try{
                        stage(&apos;Remove config map&apos;){
                            sh &apos;kubectl delete configmaps $subdomain -n default&apos;
                        }
                    }
                    catch (err) {
                        unstable (message: &quot;${STAGE_NAME} is unstable.&quot;)
                    }

                    try{
                        stage(&apos;Remove config map&apos;){
                             sh &apos;kubectl delete configmaps domains-$subdomain -n default&apos;
                        }
                    }
                    catch (err) {
                        unstable (message: &quot;${STAGE_NAME} is unstable.&quot;)
                    }

                    try{
                        stage(&apos;List resources on default namespace&apos;){
                            sh &apos;kubectl get deployments -n default&apos;
                            sh &apos;kubectl get pods  -n default&apos;
                            sh &apos;kubectl get services -n default&apos;
                            sh &apos;kubectl get configmaps -n default&apos;
                        }
                    }
                    catch (err) {
                        unstable (message: &quot;${STAGE_NAME} is unstable.&quot;)
                    }



                }
            }

        }


    }
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>254263357</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>220824133</long>
      </entry>
      <entry>
        <string>run</string>
        <long>3183595436</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>132321898</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>69674434</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>51</iota>
    <head>1:51</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>