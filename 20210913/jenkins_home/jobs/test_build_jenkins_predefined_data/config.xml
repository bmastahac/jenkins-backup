<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.41">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>JENKINS_BACKUP_REPOSITORY</name>
          <description></description>
          <defaultValue>https://github.com/bmastahac/jenkins-backup.git</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description></description>
          <defaultValue>20210712</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JENKINS_PREDEFINED_DATA_IMAGE_VERSION</name>
          <description></description>
          <defaultValue>1.1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.92">
    <script>
            podTemplate(
          containers: [
              containerTemplate(name: &apos;node&apos;, image: &apos;node:latest&apos;, ttyEnabled: true, command: &apos;cat&apos;)
              ]
          ){
              node(POD_LABEL){

                  stage (&apos;Git clone&apos;){
                      sh &apos;git clone https://github.com/PharmaLedger-IMI/governance-workspace.git&apos;
                      sh &apos;cd governance-workspace/jenkins/docker/predefined &amp;&amp; sed &quot;s,%BACKUP_BRANCH_NAME%,${BRANCH},g&quot; Dockerfile.template | sed &quot;s,%JENKINS_BACKUP_REPOSITORY%,${JENKINS_BACKUP_REPOSITORY},g&quot; &gt; Dockerfile&apos;
                      sh &apos;cat governance-workspace/jenkins/docker/predefined/Dockerfile&apos;
                  }


                  stage (&apos;Build and publish docker Image&apos;){
                      
                       //sh &apos;git clone https://github.com/PharmaLedger-IMI/governance-workspace.git&apos;
                    //sh &apos;cd governance-workspace &amp;&amp; git log -n 1 --format=&quot;%H&quot; &gt; usecase.version &amp;&amp; cat usecase.version&apos;
                    script{
                      //usecase_version = sh(  returnStdout: true, script: &apos;cat governance-workspace/usecase.version&apos;)
                      usecase_version = sh(  returnStdout: true, script: &apos;cd governance-workspace &amp;&amp; git log -n 1 --format=&quot;%H&quot;&apos;)
                    }
                    
                        def dockerfile = readFile(&apos;governance-workspace/jenkins/docker/predefined/Dockerfile&apos;)
                        build job: &apos;build-and-push-docker-image&apos;,
                        parameters: [
                                string(name: &apos;DATA_IMAGE_NAME&apos;, value:&quot;$JENKINS_PREDEFINED_DATA_IMAGE_NAME&quot;),
                                string(name: &apos;DATA_IMAGE_VERSION&apos;, value:&quot;$usecase_version&quot;),
                                base64File(name: &apos;dockerfile&apos;, base64: Base64.encoder.encodeToString(dockerfile.bytes))
                                ]
                                
                        }

              }

          }




  
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>