<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.41">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <io.jenkins.plugins.file__parameters.StashedFileParameterValue plugin="file-parameters@99.102.vbc6a133bcbbb">
          <name>ethJoinFile</name>
          <filename>ethJoin.json</filename>
        </io.jenkins.plugins.file__parameters.StashedFileParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>ethJoinFile</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.0.2.8">
      <queuingDurationMillis>4</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>1</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.19">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.92">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.0.2.8">
      <queuingDurationMillis>11684</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>11670</buildableDurationMillis>
      <waitingDurationMillis>12</waitingDurationMillis>
      <executingDurationMillis>825424</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>3</queueId>
  <timestamp>1631796791629</timestamp>
  <startTime>1631796791633</startTime>
  <result>SUCCESS</result>
  <duration>838257</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>//Jenkins env variable
//$POD_DOCKER_REPOSITORY
//$KUBECTL_JENKINS_AGENT
//$KUBECTL_JENKINS_AGENT_VERSION
//$ETH_ADAPTER_DOCKER_IMAGE
//$ETH_ADAPTER_DOCKER_IMAGE_VERSION



def kubectl_image_source = &quot;$POD_DOCKER_REPOSITORY&quot;+&apos;:&apos;+&quot;$KUBECTL_JENKINS_AGENT&quot;+&apos;_&apos;+&quot;$KUBECTL_JENKINS_AGENT_VERSION&quot;

podTemplate(serviceAccount: &apos;jdefaultmns&apos;,namespace: &apos;jenkins&apos;,containers: [
  containerTemplate(name: &apos;kubectl&apos;, image: kubectl_image_source, command: &apos;cat&apos;, ttyEnabled: true)
],
volumes: [
  hostPathVolume(mountPath: &apos;/var/run/docker.sock&apos;, hostPath: &apos;/var/run/docker.sock&apos;)
]){
      podTemplate(
          containers: [
              containerTemplate(name: &apos;node&apos;, image: &apos;node:latest&apos;, ttyEnabled: true, command: &apos;cat&apos;)
              ]
          ){

              node(POD_LABEL){

                stage (&apos;Build&apos;){
                    container(&apos;node&apos;){
                        sh &apos;git clone https://github.com/PharmaLedger-IMI/ethadapter.git&apos;
                        sh &apos;cd ethadapter &amp;&amp; npm install --unsafe-perm&apos;
                    }
                }

                stage (&apos;Build docker image&apos;){
                    def dockerfile = readFile(&apos;ethadapter/EthAdapter/dockerfile-dev&apos;)
                    build job: &apos;build-and-push-docker-image&apos;,
                    parameters: [
                            string(name: &apos;DATA_IMAGE_NAME&apos;, value:&quot;$ETH_ADAPTER_DOCKER_IMAGE&quot;),
                            string(name: &apos;DATA_IMAGE_VERSION&apos;, value:&quot;$ETH_ADAPTER_DOCKER_IMAGE_VERSION&quot;),
                            base64File(name: &apos;dockerfile&apos;, base64: Base64.encoder.encodeToString(dockerfile.bytes))
                            ]
                }

                stage (&apos;Prepare environment&apos;){
                    container(&apos;node&apos;){
                        sh &apos;git clone https://github.com/PharmaLedger-IMI/governance-workspace.git&apos;
                        sh &apos;cp -a ethadapter/EthAdapter/k8s/. governance-workspace/jenkins/quorum-fresh-mode/k8s/ethAdapter/&apos;
                        unstash &apos;ethJoinFile&apos;
                        sh &apos;cp ethJoinFile governance-workspace/jenkins/quorum-fresh-mode/k8s/ethAdapter/templates/ethAdapterJoiningJSON.json&apos;
                    }
                }

                stage (&apos;Prepare and deploy EthAdapter&apos;){
                    container(&apos;node&apos;){
                        sh &apos;cd governance-workspace/jenkins/quorum-fresh-mode &amp;&amp; npm install&apos;
                        sh &apos;cd governance-workspace/jenkins/quorum-fresh-mode &amp;&amp; node ./stages/deployEthAdapter/stage.js&apos;
                        sh &apos;cd governance-workspace/jenkins/quorum-fresh-mode/k8s/ethAdapter &amp;&amp; sed &quot;s|%POD_DOCKER_REPOSITORY%|$POD_DOCKER_REPOSITORY|g&quot; EthAdapter.yaml | sed &quot;s|%ETH_ADAPTER_DOCKER_IMAGE%|$ETH_ADAPTER_DOCKER_IMAGE|g&quot;  | sed &quot;s|%ETH_ADAPTER_DOCKER_IMAGE_VERSION%|$ETH_ADAPTER_DOCKER_IMAGE_VERSION|g&quot; &gt; tmp &amp;&amp; mv tmp EthAdapter.yaml &apos;
                        sh &apos;cat governance-workspace/jenkins/quorum-fresh-mode/k8s/ethAdapter/EthAdapter.yaml&apos;
                    }
                    container(&apos;kubectl&apos;){
                        sh &apos;cd governance-workspace/jenkins/quorum-fresh-mode &amp;&amp; kubectl apply -n default -f ./k8s/ethAdapter &amp;&amp; sleep 60&apos;
                    }
                }

                stage (&apos;Check connection status&apos;){
                    container (&apos;node&apos;){
                        sh &apos;cd governance-workspace/jenkins/quorum-fresh-mode &amp;&amp; node ./stages/checkEthAdapter/stage.js&apos;
                    }
                }


              }
          }

}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>400601596</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>1091140043</long>
      </entry>
      <entry>
        <string>run</string>
        <long>5756474889</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>544430094</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>176744070</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>69</iota>
    <head>1:69</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>